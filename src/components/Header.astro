---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
import Search from './Search.astro';
import { ui, defaultLang } from '../i18n/ui';

const { lang: langFromProps } = Astro.props;

function getLangFromUrl(url: URL) {
  const [, lang] = url.pathname.split('/');
  if (lang in ui) return lang as keyof typeof ui;
  return defaultLang;
}

const lang = langFromProps || getLangFromUrl(Astro.url);
const t = ui[lang];
---

<header>
    <nav>
        <div class="nav-left">
            <a href={`/${lang}/`} class="site-title-link">{SITE_TITLE}</a>
        </div>

        <div class="search-container">
            <form action={`/${lang === 'pt' ? 'pt/busca' : 'en/search'}`} method="GET">
                <label for="header-search-input" class="sr-only">{t['search.label']}</label>
                <input type="search" id="header-search-input" name="q" placeholder={t['search.placeholder']} />
                <button type="submit">{t['search.label']}</button>
            </form>
        </div>

        <div class="hamburger">
            <span class="line"></span>
            <span class="line"></span>
            <span class="line"></span>
        </div>

        <div class="nav-links">
            <HeaderLink href={`/${lang}/${t['nav.categories.slug']}/`} class="categories-link">{t['nav.categories']}</HeaderLink>
            <div class="language-switcher">
                <a href="/pt/" class={lang === 'pt' ? 'active' : ''}>PT</a>
                <span class="separator">|</span>
                <a href="/en/" class={lang === 'en' ? 'active' : ''}>EN</a>
            </div>
        </div>
    </nav>
</header>

<script>
    // Este script Ã© apenas para o menu hamburger em telas pequenas
    document.addEventListener('DOMContentLoaded', function() {
        const hamburger = document.querySelector('.hamburger');
        const navLinks = document.querySelector('.nav-links');

        if (hamburger && navLinks) {
            hamburger.addEventListener('click', () => {
                navLinks.classList.toggle('expanded');
                hamburger.classList.toggle('active');
            });
        }
    });
</script>

<style>
	header {
		position: sticky;
		top: 0;
		z-index: 10;
		margin: 0;
		padding: 0 1.5em;
		background: #000000;
		border-bottom: 1px solid #FFFFFF;
	}
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		height: 4.5rem;
	}
	.site-title-link {
		font-size: 1.8em;
		font-weight: 700;
		text-decoration: none !important;
		color: rgb(var(--black));
		text-shadow: none;
		transition: color 0.3s ease, text-shadow 0.3s ease;
	}
	.site-title-link:hover {
		color: var(--green);
		text-shadow: 0 0 8px rgba(89, 239, 11, 0.4);
	}
	.nav-links {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}
	.categories-link {
		padding: 0.6em 1.2em;
		border: 2px solid rgb(var(--gray));
		border-radius: 20px;
		color: rgb(var(--gray-dark));
		text-decoration: none;
		font-family: "Poppins", sans-serif;
		font-size: 0.8em;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
	}
	.categories-link:hover,
	.categories-link.active {
		background-color: var(--green);
		border-color: var(--green);
		color: #000000;
	}
	.language-switcher {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}
	.language-switcher a {
		color: rgb(var(--gray-dark));
		text-decoration: none;
		font-weight: 500;
	}
	.language-switcher a.active {
		color: var(--green-bright);
		font-weight: 700;
	}
	.separator {
		color: rgb(var(--gray-dark));
	}

    .hamburger {
        display: none;
        cursor: pointer;
        flex-direction: column;
        gap: 5px;
        z-index: 20;
    }

    .hamburger .line {
        width: 30px;
        height: 3px;
        background-color: white;
        border-radius: 3px;
        transition: all 0.3s ease-in-out;
    }

    .hamburger.active .line:nth-child(1) {
        transform: translateY(8px) rotate(45deg);
    }
    .hamburger.active .line:nth-child(2) {
        opacity: 0;
    }
    .hamburger.active .line:nth-child(3) {
        transform: translateY(-8px) rotate(-45deg);
    }

    .search-container {
        flex-grow: 1;
        display: flex;
        justify-content: center;
        padding: 0 2rem;
    }

    .search-container form {
        display: flex;
        width: 100%;
        max-width: 400px;
        gap: 0.5rem;
    }

    .search-container input {
        flex-grow: 1;
        padding: 0.5rem 1rem;
        border: 1px solid rgb(var(--gray));
        border-radius: 4px;
        background-color: #000000;
        color: rgb(var(--black));
        font-size: 0.9em;
    }

    .search-container input::placeholder {
        color: var(--accent-dark);
        opacity: 1;
    }

    .search-container button {
        padding: 0.5rem 1rem;
        border: 1px solid rgb(var(--gray));
        border-radius: 4px;
        background-color: #000000;
        color: rgb(var(--black));
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.2s ease, color 0.2s ease;
        font-size: 0.9em;
    }

    .search-container button:hover {
        background-color: rgb(var(--black));
        color: #000000;
    }

    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }

    @media (max-width: 720px) {
        .search-container {
            display: none;
        }

        .nav-links {
            display: none;
            position: absolute;
            top: 4.5rem;
            left: 0;
            width: 100%;
            background-color: #000000;
            flex-direction: column;
            align-items: center;
            padding: 2rem 0;
            border-bottom: 1px solid #FFFFFF;
        }

        .nav-links.expanded {
            display: flex;
        }

        .hamburger {
            display: flex;
        }
    }
</style>