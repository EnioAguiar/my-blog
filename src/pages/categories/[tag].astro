---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';
import PostCard from '../../components/PostCard.astro';
import { getTag } from '../../i18n/ui';

export async function getStaticPaths() {
	const allPosts = await getCollection('blog');
	const uniqueTagKeys = [...new Set(allPosts.flatMap(post => post.data.tags || []))];

	return uniqueTagKeys.map((tagKey) => {
		const tag = getTag(tagKey);
		const filteredPosts = allPosts.filter((post) =>
			(post.data.tags || []).includes(tagKey)
		);

		return {
			params: { tag: tag.slug },
			props: { 
				posts: filteredPosts,
				tagName: tag.name,
			},
		};
	});
}

const { tag } = Astro.params;
const { posts, tagName } = Astro.props as { posts: CollectionEntry<'blog'>[], tagName: string };
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead
			title={`Posts about ${tagName}`}
			description={`All posts about ${tagName}`}
		/>
		<style>
			main {
				width: 960px;
			}
			h1 {
				text-align: center;
				margin-bottom: 2rem;
				text-transform: capitalize;
			}
			h1 .tag-name {
				color: var(--green);
			}
			.grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
				gap: 2rem;
				padding: 0;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<h1>Posts with category: <span class="tag-name">#{tagName}</span></h1>
			<section class="grid">
				{
					posts.map((post, i) => (
						<PostCard post={post} number={i + 1} />
					))
				}
			</section>
		</main>
		<Footer />
	</body>
</html>